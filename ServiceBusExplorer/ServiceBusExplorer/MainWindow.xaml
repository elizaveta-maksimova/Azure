<Window x:Class="ServiceBusExplorer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:ServiceBusExplorer.Converters"
        xmlns:commands="clr-namespace:ServiceBusExplorer.Commands"
        xmlns:viewModels="clr-namespace:ServiceBusExplorer.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:ServiceBusExplorer.Behaviors"
        xmlns:controls="clr-namespace:ServiceBusExplorer.Controls"
        mc:Ignorable="d"
        Icon="/Resources/Images/Service Bus.ico"
        Title="Azure Service Bus" Height="770" Width="775"
        WindowStartupLocation="CenterOwner"
        Initialized="MainWindowInitialized"
        Background="{DynamicResource AppBackgroundBrush}"
        Foreground="{DynamicResource AppForegroundBrush}"
        DataContext="{Binding MainViewModel, Source={StaticResource Locator}}">
    <Window.Resources>
        <converters:CheckedToLengthConverter  TrueValue="Auto" FalseValue="0" x:Key="QueueViewConverter" />
        <converters:CheckedToLengthConverter  TrueValue="Auto" FalseValue="0" x:Key="OutputViewConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{x:Static commands:RoutedCommands.OpenConnectNamespaceView}" Modifiers="Control" Key="N"/>
        <KeyBinding Command="{x:Static commands:RoutedCommands.OpenCreateQueueView}" Modifiers="Control" Key="Q"/>
        <KeyBinding Command="{x:Static commands:RoutedCommands.OpenCreateTopicView}" Modifiers="Control" Key="T"/>
        <KeyBinding Command="{x:Static commands:RoutedCommands.OpenCreateSubscriptionView}" Modifiers="Control" Key="S"/>
        <KeyBinding Command="{x:Static commands:RoutedCommands.DisconnectNamespace}" Modifiers="Control" Key="D"/>
        <KeyBinding Command="{x:Static commands:RoutedCommands.RefreshNamespace}" Modifiers="Control" Key="R"/>
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static commands:RoutedCommands.OpenConnectNamespaceView}" CanExecute="CanOpenConnectNamespace" Executed="OpenConnectNamespace"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.OpenCreateQueueView}" CanExecute="CanOpenCreateQueue" Executed="OpenCreateQueue"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.OpenCreateTopicView}" CanExecute="CanOpenCreateTopic" Executed="OpenCreateTopic"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.OpenStartProcessingView}" CanExecute="CanOpenStartProcessingView" Executed="OpenStartProcessingView"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.OpenCreateSubscriptionView}" CanExecute="CanOpenCreateSubscription" Executed="OpenCreateSubscription"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.DisconnectNamespace}" CanExecute="CanDisconnectNamespace" Executed="DisconnectNamespace"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.RefreshNamespace}" CanExecute="CanRefreshNamespace" Executed="RefreshNamespace"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.SendMessage}" CanExecute="CanSendMessage" Executed="SendMessage"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.StopProcessing}" CanExecute="CanStopProcessing" Executed="StopProcessing"/>
        <CommandBinding Command="{x:Static commands:RoutedCommands.DeleteItem}" CanExecute="CanDeleteItem" Executed="DeleteItem"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding ElementName=ViewQueueTopicsMenuItem, Mode=TwoWay, Path=IsChecked, Converter={StaticResource QueueViewConverter}}"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="{Binding ElementName=ViewOutputMenuItem, Mode=TwoWay, Path=IsChecked, Converter={StaticResource OutputViewConverter}}"  MinHeight="200" MaxHeight="500"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" IsMainMenu="True" VerticalAlignment="Center" Style="{DynamicResource MenuStyle}" Margin="0,5">
            <MenuItem Header="File" Style="{DynamicResource MenuItemStyle}">
                <MenuItem Header="Connect"  Style="{DynamicResource MenuItemStyle}" InputGestureText="Ctrl+N" Command="{x:Static commands:RoutedCommands.OpenConnectNamespaceView}"/>
                <MenuItem Header="Disconnect"  Style="{DynamicResource MenuItemStyle}" InputGestureText="Ctrl+D" Command="{x:Static commands:RoutedCommands.DisconnectNamespace}" >
                </MenuItem>
                <MenuItem Header="Refresh"  Style="{DynamicResource MenuItemStyle}" InputGestureText="Ctrl+R" Command="{x:Static commands:RoutedCommands.RefreshNamespace}"/>
                <MenuItem Header="Create"  Style="{DynamicResource MenuItemStyle}">
                    <MenuItem Header="Queue"  Style="{DynamicResource MenuItemStyle}" InputGestureText="Ctrl+Q" Command="{x:Static commands:RoutedCommands.OpenCreateQueueView}"/>
                    <MenuItem Header="Topic"  Style="{DynamicResource MenuItemStyle}" InputGestureText="Ctrl+T" Command="{x:Static commands:RoutedCommands.OpenCreateTopicView}"/>
                    <MenuItem Header="Subscription"  Style="{DynamicResource MenuItemStyle}" InputGestureText="Ctrl+S" Command="{x:Static commands:RoutedCommands.OpenCreateSubscriptionView}"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Edit" Style="{DynamicResource MenuItemStyle}">
                <MenuItem Header="Delete"  Style="{DynamicResource MenuItemStyle}" Command="{x:Static commands:RoutedCommands.DeleteItem}"/>
            </MenuItem>
            <MenuItem Header="View" Style="{DynamicResource MenuItemStyle}">
                <MenuItem Header="Namespace"  Style="{DynamicResource MenuItemStyle}" IsCheckable="True" x:Name="ViewQueueTopicsMenuItem" IsChecked="True"/>
                <MenuItem Header="Console output"  Style="{DynamicResource MenuItemStyle}" IsCheckable="True" x:Name="ViewOutputMenuItem" IsChecked="True"/>
            </MenuItem>
        </Menu>
        <GridSplitter Grid.Row="1" Grid.Column="0" ResizeDirection="Columns" Width="10" Height="Auto" HorizontalAlignment="Right" Margin="0" Background="Transparent" Grid.RowSpan="3"/>

        <Grid Grid.Column="0" Grid.Row="1" Grid.RowSpan="3">
            <Grid.Resources>
                <DataTemplate DataType="{x:Type viewModels:QueueViewModel}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Resources/Images/Service Bus Queue.png" Style="{DynamicResource  ImageStyle}"/>
                        <TextBlock Text="{Binding Name, Mode=OneWay}" Style="{DynamicResource TextBlockStyle}"/>
                    </StackPanel>
                </DataTemplate>
                <HierarchicalDataTemplate  DataType="{x:Type viewModels:TopicViewModel}" ItemsSource="{Binding ViewModels, Mode=OneWay}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Resources/Images/Service Bus Topic.png" Style="{DynamicResource  ImageStyle}"/>
                        <TextBlock Text="{Binding Name, Mode=OneWay}" Style="{DynamicResource TextBlockStyle}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SubscriptionViewModel}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Resources/Images/Service Bus Queue.png" Style="{DynamicResource  ImageStyle}"/>
                        <TextBlock Text="{Binding Name, Mode=OneWay}" Style="{DynamicResource TextBlockStyle}"/>
                    </StackPanel>
                </DataTemplate>
            </Grid.Resources>
            <Border Style="{DynamicResource BorderStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  MinWidth="150">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" TextAlignment="Left" HorizontalAlignment="Stretch" Style="{DynamicResource TextBlockStyle}">Namespace</TextBlock>
                    <TreeView VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Style="{DynamicResource TreeViewStyle}" ItemsSource="{Binding ViewModels, Mode=OneWay}">
                        <i:Interaction.Behaviors>
                            <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding SelectedViewModel, Mode=TwoWay}" />
                        </i:Interaction.Behaviors>
                    </TreeView>
                </DockPanel>
            </Border>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="1" Grid.RowSpan="2">
            <Grid.Resources>
                <DataTemplate DataType="{x:Type viewModels:QueueViewModel}">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" TextAlignment="Left" HorizontalAlignment="Stretch" Style="{DynamicResource TextBlockStyle}">Service Bus Queue</TextBlock>
                        <controls:MessageControl  DockPanel.Dock="Top"/>
                        <controls:ProcessorControl DockPanel.Dock="Bottom"/>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:TopicViewModel}">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" TextAlignment="Left" HorizontalAlignment="Stretch" Style="{DynamicResource TextBlockStyle}">Service Bus Topic</TextBlock>
                        <controls:MessageControl/>
                    </DockPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SubscriptionViewModel}">
                    <DockPanel>
                        <TextBlock DockPanel.Dock="Top" TextAlignment="Left" HorizontalAlignment="Stretch" Style="{DynamicResource TextBlockStyle}">Service Bus Topic</TextBlock>
                        <controls:ProcessorControl DockPanel.Dock="Bottom"/>
                    </DockPanel>
                </DataTemplate>
            </Grid.Resources>
            <ContentControl Content="{Binding SelectedViewModel}"/>
        </Grid>
        <Grid Grid.Column="1" Grid.Row="3">
            <Border Style="{DynamicResource BorderStyle}" HorizontalAlignment="Stretch">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Top" TextAlignment="Left" HorizontalAlignment="Stretch" Style="{DynamicResource TextBlockStyle}">Console output</TextBlock>
                    <RichTextBox x:Name="OutputTextBox" IsReadOnly="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"  Style="{DynamicResource ConsoleStyle}" FontFamily="Consolas" VerticalScrollBarVisibility="Visible"/>
                </DockPanel>
            </Border>
        </Grid>
        <GridSplitter Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" ResizeDirection="Rows" Width="Auto" Height="10" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="0" Background="Transparent"/>
        <StatusBar Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Background="Transparent" Height="auto" MaxHeight="28">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid Background="{DynamicResource StatusControlBackgroundBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Style="{DynamicResource TextBlockStyle}" FontSize="{DynamicResource SmallFontSize}" Text="{Binding Status, Mode=OneWay}"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <ProgressBar Width="90" Height="15" IsIndeterminate="{Binding IsProcessing, Mode=OneWay}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
